{"ast":null,"code":"var _jsxFileName = \"/Users/ishapathak/amusement-park/src/Park.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./css/Park.css\";\nimport InfoCard from \"./InfoCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Park() {\n  _s();\n\n  const cardRef = useRef(null);\n  const [isHovering, setIsHovering] = useState(false);\n  const [bldg, setBldg] = useState(0);\n\n  function cardTooltip(props) {\n    if (isHovering) {\n      return /*#__PURE__*/_jsxDEV(InfoCard, {\n        bldgId: props.bldg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  function mouseAction(evt) {\n    const index = evt.currentTarget.dataset.project;\n    console.dir(evt); //this.houses[index].classList.toggle('active');\n  }\n\n  function handleMouseOver(e) {\n    setIsHovering(true);\n    setBldg(e);\n    console.log(bldg);\n  }\n\n  function handleMouseOut(e) {\n    setIsHovering(false);\n  } //onClick={mouseAction} onMouseOver={(e) => handleMouseOver(6)} onMouseOut={(e) => handleMouseOut(6)}>\n\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 -50 1031.41 441.18\",\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      id: \"floor\",\n      fill: \"none\",\n      stroke: \"#949494\",\n      strokeWidth: \"0.5\",\n      strokeMiterlimit: \"10\",\n      d: \"M1 390.76h1050\",\n      strokeLinecap: \"round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Park, \"3KyBZpJhBcKcnUK1ucwoJ9bjmV0=\");\n\n_c = Park;\nexport default Park;\n\nvar _c;\n\n$RefreshReg$(_c, \"Park\");","map":{"version":3,"sources":["/Users/ishapathak/amusement-park/src/Park.js"],"names":["useEffect","useRef","useState","InfoCard","Park","cardRef","isHovering","setIsHovering","bldg","setBldg","cardTooltip","props","mouseAction","evt","index","currentTarget","dataset","project","console","dir","handleMouseOver","e","log","handleMouseOut"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAMC,OAAO,GAAGJ,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;;AAEA,WAASQ,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAIL,UAAJ,EAAgB;AACd,0BAAO,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEK,KAAK,CAACH;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AACD,WAASI,WAAT,CAAqBC,GAArB,EAA0B;AACxB,UAAMC,KAAK,GAAGD,GAAG,CAACE,aAAJ,CAAkBC,OAAlB,CAA0BC,OAAxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ,EAFwB,CAGxB;AACD;;AAED,WAASO,eAAT,CAAyBC,CAAzB,EAA4B;AAC1Bd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,OAAO,CAACY,CAAD,CAAP;AAEAH,IAAAA,OAAO,CAACI,GAAR,CAAYd,IAAZ;AACD;;AAED,WAASe,cAAT,CAAwBF,CAAxB,EAA2B;AACzBd,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAzBa,CA0Bd;;;AACA,sBACE;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,OAAO,EAAC,sBAFV;AAGE,IAAA,SAAS,EAAC,WAHZ;AAAA,2BAKE;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,MAAM,EAAC,SAHT;AAIE,MAAA,WAAW,EAAC,KAJd;AAKE,MAAA,gBAAgB,EAAC,IALnB;AAME,MAAA,CAAC,EAAC,gBANJ;AAOE,MAAA,aAAa,EAAC;AAPhB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA5CQH,I;;KAAAA,I;AA8CT,eAAeA,IAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./css/Park.css\";\nimport InfoCard from \"./InfoCard\";\n\nfunction Park() {\n  const cardRef = useRef(null);\n  const [isHovering, setIsHovering] = useState(false);\n  const [bldg, setBldg] = useState(0);\n\n  function cardTooltip(props) {\n    if (isHovering) {\n      return <InfoCard bldgId={props.bldg} />;\n    }\n  }\n  function mouseAction(evt) {\n    const index = evt.currentTarget.dataset.project;\n    console.dir(evt);\n    //this.houses[index].classList.toggle('active');\n  }\n\n  function handleMouseOver(e) {\n    setIsHovering(true);\n    setBldg(e);\n\n    console.log(bldg);\n  }\n\n  function handleMouseOut(e) {\n    setIsHovering(false);\n  }\n  //onClick={mouseAction} onMouseOver={(e) => handleMouseOver(6)} onMouseOut={(e) => handleMouseOut(6)}>\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 -50 1031.41 441.18\"\n      className=\"container\"\n    >\n      <path\n        id=\"floor\"\n        fill=\"none\"\n        stroke=\"#949494\"\n        strokeWidth=\"0.5\"\n        strokeMiterlimit=\"10\"\n        d=\"M1 390.76h1050\"\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n}\n\nexport default Park;\n"]},"metadata":{},"sourceType":"module"}